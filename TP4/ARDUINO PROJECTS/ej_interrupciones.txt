#include <Servo.h>

Servo servo1;
const int servoPin = 10;
const byte interruptPin = 2;
volatile byte button = 0;
volatile byte espera = 0;
const int ledPin0 = 3;
const int ledPin1 = 4;
const int ledPin2 = 5;
const int VRy = A0;
const int VRx = A1;
const int SW = 2;

void setup() {
    servo1.attach(servoPin);
    pinMode(ledPin0, OUTPUT);
    pinMode(ledPin1, OUTPUT);
    pinMode(interruptPin, INPUT_PULLUP);
    attachInterrupt(digitalPinToInterrupt(interruptPin), click, RISING);
    pinMode(VRx, INPUT);
    pinMode(VRy, INPUT);
    pinMode(SW, INPUT_PULLUP);
}
void loop() {
    // Si se produjo una interrupcion recientemente, espera 100ms para evitar el efecto rebote.
    if (espera) {
      delay(100);
      espera = 0;
    }
    int xPosition = analogRead(VRx);
    int yPosition = analogRead(VRy);
    int SW_state = digitalRead(SW);
    int angulo1 = map(xPosition, 0, 1023, 0, 180);
    servo1.write(angulo1);
    int brillo = map(yPosition, 0, 1023, -255, 255);
    analogWrite(ledPin1, abs(brillo));

    // Si la variable button esta en 1, enciende todos los leds.
    if(button) {
        digitalWrite(ledPin0, 1);
        digitalWrite(ledPin1, 1);
        digitalWrite(ledPin2, 1);
    } 
    // Sino, los apaga
    else {
        digitalWrite(ledPin0, 0);
        digitalWrite(ledPin1, 0);
        digitalWrite(ledPin2, 0);
    }
}

void click() {
  if (!espera) {
      espera = 1;
      if( button == 0 ) {
          button = 1;
      } 
      else {
          button = 0;
      }
  }
}